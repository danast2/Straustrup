#include <iostream>
#include <exception>
//порядок записи обработчиков


//правильный логический порядок
void func(){
    try{
        //......
    }catch (std::ios_base::failure){
        // обработка любых ошибок потокового ввода/вывода
    }catch(std::exception& e){
        //обработка любых исключений стандартной библиотеки
    }catch (...){
        // обработка всех исключений
    }
}

//поскольку компилятор разбирается в иерархии классов, он может выявить многие логические ошибки. Например:

void foo(){
    try{
        //......
    }catch (...){ //Catch-all handler must come last
        // обработка любых  обработка всех исключений
    }catch(std::exception& e){
        //обработка любых исключений стандартной библиотеки
    }catch (std::bad_cast){
        // обработка исключений dynamic_cast
    }
}

//Здесь обработчик исключений типа exception никогда не будет выполняться.
//bad cast никогда не будет рассматриваться, потому что тип bad cast является производным от exception.
void f(){
    try{
        //......
    }catch(std::exception& e){
        //обработка любых исключений стандартной библиотеки
    }catch (std::bad_cast){
        // обработка исключений dynamic_cast
    }
}
